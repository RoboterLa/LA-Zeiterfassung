{"ast":null,"code":"var _jsxFileName = \"/Users/robertlackner/zeiterfassung-clean/frontend/src/components/ArbeitszeitTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ArbeitszeitTimer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArbeitszeitTimer = ({\n  onTimeEntrySaved,\n  currentStatus: propCurrentStatus\n}) => {\n  _s();\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [currentStatus, setCurrentStatus] = useState(null);\n  const [workStartTime, setWorkStartTime] = useState(null);\n  const [breakStartTime, setBreakStartTime] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Timer für aktuelle Zeit\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Lade aktuellen Status beim Start\n  useEffect(() => {\n    loadCurrentStatus();\n  }, []);\n\n  // Aktualisiere Work-Start-Zeit wenn Status sich ändert\n  useEffect(() => {\n    var _currentStatus$curren, _currentStatus$curren2;\n    if (currentStatus !== null && currentStatus !== void 0 && currentStatus.is_working && currentStatus !== null && currentStatus !== void 0 && (_currentStatus$curren = currentStatus.current_entry) !== null && _currentStatus$curren !== void 0 && _currentStatus$curren.clock_in) {\n      const startTime = new Date();\n      const [hours, minutes, seconds] = currentStatus.current_entry.clock_in.split(':');\n      startTime.setHours(parseInt(hours), parseInt(minutes), parseInt(seconds || 0));\n      setWorkStartTime(startTime);\n    } else {\n      setWorkStartTime(null);\n    }\n    if ((currentStatus === null || currentStatus === void 0 ? void 0 : currentStatus.break_status) === 'on_break' && currentStatus !== null && currentStatus !== void 0 && (_currentStatus$curren2 = currentStatus.current_entry) !== null && _currentStatus$curren2 !== void 0 && _currentStatus$curren2.break_start) {\n      const breakTime = new Date();\n      const [hours, minutes, seconds] = currentStatus.current_entry.break_start.split(':');\n      breakTime.setHours(parseInt(hours), parseInt(minutes), parseInt(seconds || 0));\n      setBreakStartTime(breakTime);\n    } else {\n      setBreakStartTime(null);\n    }\n  }, [currentStatus]);\n  const loadCurrentStatus = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/monteur/current-status');\n      if (response.data.success) {\n        setCurrentStatus(response.data);\n        if (onStatusChange) onStatusChange(response.data);\n      }\n    } catch (error) {\n      console.error('Error loading current status:', error);\n    }\n  };\n  const formatDuration = seconds => {\n    const h = Math.floor(seconds / 3600);\n    const m = Math.floor(seconds % 3600 / 60);\n    const s = seconds % 60;\n    return `${h.toString().padStart(2, '0')}:${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`;\n  };\n  const getCurrentWorkTime = () => {\n    if (!workStartTime) return 0;\n    return Math.floor((currentTime - workStartTime) / 1000);\n  };\n  const getCurrentBreakTime = () => {\n    if (!breakStartTime) return 0;\n    return Math.floor((currentTime - breakStartTime) / 1000);\n  };\n  const handleClockIn = async () => {\n    setLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.post('http://localhost:8080/api/monteur/clock-in');\n      if (response.data.success) {\n        setMessage(response.data.message);\n        await loadCurrentStatus();\n      } else {\n        setMessage(response.data.error);\n      }\n    } catch (error) {\n      setMessage('Fehler beim Einstempeln');\n    }\n    setLoading(false);\n  };\n  const handleClockOut = async () => {\n    setLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.post('http://localhost:8080/api/monteur/clock-out');\n      if (response.data.success) {\n        setMessage(response.data.message);\n        await loadCurrentStatus();\n      } else {\n        setMessage(response.data.error);\n      }\n    } catch (error) {\n      setMessage('Fehler beim Ausstempeln');\n    }\n    setLoading(false);\n  };\n  const handleStartBreak = async () => {\n    setLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.post('http://localhost:8080/api/monteur/start-break');\n      if (response.data.success) {\n        setMessage(response.data.message);\n        await loadCurrentStatus();\n      } else {\n        setMessage(response.data.error);\n      }\n    } catch (error) {\n      setMessage('Fehler beim Starten der Pause');\n    }\n    setLoading(false);\n  };\n  const handleEndBreak = async () => {\n    setLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.post('http://localhost:8080/api/monteur/end-break');\n      if (response.data.success) {\n        setMessage(response.data.message);\n        await loadCurrentStatus();\n      } else {\n        setMessage(response.data.error);\n      }\n    } catch (error) {\n      setMessage('Fehler beim Beenden der Pause');\n    }\n    setLoading(false);\n  };\n  const isWorking = (currentStatus === null || currentStatus === void 0 ? void 0 : currentStatus.is_working) || false;\n  const isOnBreak = (currentStatus === null || currentStatus === void 0 ? void 0 : currentStatus.break_status) === 'on_break';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arbeitszeit-timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-time-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-label\",\n        children: \"Aktuelle Zeit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-value\",\n        children: currentTime.toLocaleTimeString('de-DE')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), isWorking && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work-timer-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-label\",\n        children: \"Arbeitszeit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-value\",\n        children: formatDuration(getCurrentWorkTime())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), isOnBreak && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"break-timer-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-label\",\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-value break\",\n        children: formatDuration(getCurrentBreakTime())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-control\",\n        children: !isWorking ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClockIn,\n          disabled: loading,\n          className: \"timer-btn start\",\n          title: \"Einstempeln\",\n          children: loading ? 'Lade...' : 'Einstempeln'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClockOut,\n          disabled: loading,\n          className: \"timer-btn stop\",\n          title: \"Ausstempeln\",\n          children: loading ? 'Lade...' : 'Ausstempeln'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), isWorking && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"break-controls\",\n        children: !isOnBreak ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartBreak,\n          disabled: loading,\n          className: \"timer-btn break-start\",\n          title: \"Pause starten\",\n          children: loading ? 'Lade...' : 'Pause'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEndBreak,\n          disabled: loading,\n          className: \"timer-btn break-end\",\n          title: \"Pause beenden\",\n          children: loading ? 'Lade...' : 'Weiter'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-display\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-badge ${isWorking ? 'working' : 'idle'}`,\n        children: isWorking ? isOnBreak ? 'Pause' : 'Arbeit' : 'Bereit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.includes('Fehler') ? 'error' : 'success'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(ArbeitszeitTimer, \"o5NFKBLy52LY6eF34WkBk5iIDPw=\");\n_c = ArbeitszeitTimer;\nexport default ArbeitszeitTimer;\nvar _c;\n$RefreshReg$(_c, \"ArbeitszeitTimer\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ArbeitszeitTimer","onTimeEntrySaved","currentStatus","propCurrentStatus","_s","currentTime","setCurrentTime","Date","setCurrentStatus","workStartTime","setWorkStartTime","breakStartTime","setBreakStartTime","loading","setLoading","message","setMessage","timer","setInterval","clearInterval","loadCurrentStatus","_currentStatus$curren","_currentStatus$curren2","is_working","current_entry","clock_in","startTime","hours","minutes","seconds","split","setHours","parseInt","break_status","break_start","breakTime","response","get","data","success","onStatusChange","error","console","formatDuration","h","Math","floor","m","s","toString","padStart","getCurrentWorkTime","getCurrentBreakTime","handleClockIn","post","handleClockOut","handleStartBreak","handleEndBreak","isWorking","isOnBreak","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","onClick","disabled","title","includes","_c","$RefreshReg$"],"sources":["/Users/robertlackner/zeiterfassung-clean/frontend/src/components/ArbeitszeitTimer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ArbeitszeitTimer.css';\n\nconst ArbeitszeitTimer = ({ onTimeEntrySaved, currentStatus: propCurrentStatus }) => {\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [currentStatus, setCurrentStatus] = useState(null);\n  const [workStartTime, setWorkStartTime] = useState(null);\n  const [breakStartTime, setBreakStartTime] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Timer für aktuelle Zeit\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  // Lade aktuellen Status beim Start\n  useEffect(() => {\n    loadCurrentStatus();\n  }, []);\n\n  // Aktualisiere Work-Start-Zeit wenn Status sich ändert\n  useEffect(() => {\n    if (currentStatus?.is_working && currentStatus?.current_entry?.clock_in) {\n      const startTime = new Date();\n      const [hours, minutes, seconds] = currentStatus.current_entry.clock_in.split(':');\n      startTime.setHours(parseInt(hours), parseInt(minutes), parseInt(seconds || 0));\n      setWorkStartTime(startTime);\n    } else {\n      setWorkStartTime(null);\n    }\n\n    if (currentStatus?.break_status === 'on_break' && currentStatus?.current_entry?.break_start) {\n      const breakTime = new Date();\n      const [hours, minutes, seconds] = currentStatus.current_entry.break_start.split(':');\n      breakTime.setHours(parseInt(hours), parseInt(minutes), parseInt(seconds || 0));\n      setBreakStartTime(breakTime);\n    } else {\n      setBreakStartTime(null);\n    }\n  }, [currentStatus]);\n\n  const loadCurrentStatus = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/monteur/current-status');\n      if (response.data.success) {\n        setCurrentStatus(response.data);\n        if (onStatusChange) onStatusChange(response.data);\n      }\n    } catch (error) {\n      console.error('Error loading current status:', error);\n    }\n  };\n\n  const formatDuration = (seconds) => {\n    const h = Math.floor(seconds / 3600);\n    const m = Math.floor((seconds % 3600) / 60);\n    const s = seconds % 60;\n    return `${h.toString().padStart(2, '0')}:${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`;\n  };\n\n  const getCurrentWorkTime = () => {\n    if (!workStartTime) return 0;\n    return Math.floor((currentTime - workStartTime) / 1000);\n  };\n\n  const getCurrentBreakTime = () => {\n    if (!breakStartTime) return 0;\n    return Math.floor((currentTime - breakStartTime) / 1000);\n  };\n\n  const handleClockIn = async () => {\n    setLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.post('http://localhost:8080/api/monteur/clock-in');\n      if (response.data.success) {\n        setMessage(response.data.message);\n        await loadCurrentStatus();\n      } else {\n        setMessage(response.data.error);\n      }\n    } catch (error) {\n      setMessage('Fehler beim Einstempeln');\n    }\n    setLoading(false);\n  };\n\n  const handleClockOut = async () => {\n    setLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.post('http://localhost:8080/api/monteur/clock-out');\n      if (response.data.success) {\n        setMessage(response.data.message);\n        await loadCurrentStatus();\n      } else {\n        setMessage(response.data.error);\n      }\n    } catch (error) {\n      setMessage('Fehler beim Ausstempeln');\n    }\n    setLoading(false);\n  };\n\n  const handleStartBreak = async () => {\n    setLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.post('http://localhost:8080/api/monteur/start-break');\n      if (response.data.success) {\n        setMessage(response.data.message);\n        await loadCurrentStatus();\n      } else {\n        setMessage(response.data.error);\n      }\n    } catch (error) {\n      setMessage('Fehler beim Starten der Pause');\n    }\n    setLoading(false);\n  };\n\n  const handleEndBreak = async () => {\n    setLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.post('http://localhost:8080/api/monteur/end-break');\n      if (response.data.success) {\n        setMessage(response.data.message);\n        await loadCurrentStatus();\n      } else {\n        setMessage(response.data.error);\n      }\n    } catch (error) {\n      setMessage('Fehler beim Beenden der Pause');\n    }\n    setLoading(false);\n  };\n\n  const isWorking = currentStatus?.is_working || false;\n  const isOnBreak = currentStatus?.break_status === 'on_break';\n\n  return (\n    <div className=\"arbeitszeit-timer\">\n      {/* Aktuelle Zeit */}\n      <div className=\"current-time-section\">\n        <div className=\"time-label\">Aktuelle Zeit</div>\n        <div className=\"time-value\">{currentTime.toLocaleTimeString('de-DE')}</div>\n      </div>\n\n      {/* Arbeitszeit Timer */}\n      {isWorking && (\n        <div className=\"work-timer-section\">\n          <div className=\"timer-label\">Arbeitszeit</div>\n          <div className=\"timer-value\">{formatDuration(getCurrentWorkTime())}</div>\n        </div>\n      )}\n\n      {/* Pausen Timer */}\n      {isOnBreak && (\n        <div className=\"break-timer-section\">\n          <div className=\"timer-label\">Pause</div>\n          <div className=\"timer-value break\">{formatDuration(getCurrentBreakTime())}</div>\n        </div>\n      )}\n\n      {/* Kontroll-Buttons */}\n      <div className=\"timer-controls\">\n        {/* Einstempeln/Ausstempeln */}\n        <div className=\"main-control\">\n          {!isWorking ? (\n            <button \n              onClick={handleClockIn} \n              disabled={loading}\n              className=\"timer-btn start\"\n              title=\"Einstempeln\"\n            >\n              {loading ? 'Lade...' : 'Einstempeln'}\n            </button>\n          ) : (\n            <button \n              onClick={handleClockOut} \n              disabled={loading}\n              className=\"timer-btn stop\"\n              title=\"Ausstempeln\"\n            >\n              {loading ? 'Lade...' : 'Ausstempeln'}\n            </button>\n          )}\n        </div>\n\n        {/* Pausen-Kontrollen */}\n        {isWorking && (\n          <div className=\"break-controls\">\n            {!isOnBreak ? (\n              <button \n                onClick={handleStartBreak} \n                disabled={loading}\n                className=\"timer-btn break-start\"\n                title=\"Pause starten\"\n              >\n                {loading ? 'Lade...' : 'Pause'}\n              </button>\n            ) : (\n              <button \n                onClick={handleEndBreak} \n                disabled={loading}\n                className=\"timer-btn break-end\"\n                title=\"Pause beenden\"\n              >\n                {loading ? 'Lade...' : 'Weiter'}\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Status-Anzeige */}\n      <div className=\"status-display\">\n        <div className={`status-badge ${isWorking ? 'working' : 'idle'}`}>\n          {isWorking ? (isOnBreak ? 'Pause' : 'Arbeit') : 'Bereit'}\n        </div>\n      </div>\n\n      {/* Nachrichten */}\n      {message && (\n        <div className={`message ${message.includes('Fehler') ? 'error' : 'success'}`}>\n          {message}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ArbeitszeitTimer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}